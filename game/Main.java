/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package game15;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.KeyStroke;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author tkazaks
 */
public class Main extends javax.swing.JFrame {

    String currSize = "3x3";
    String imagePath = "src/game15/cat.png";
    JFileChooser j;
    
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        game = new Window(3, 3, imagePath);
        //game.setAlignmentX(Component.CENTER_ALIGNMENT);
        getContentPane().add(game, java.awt.BorderLayout.CENTER);
        //game.render();
        jPanel1.getInputMap(jPanel1.WHEN_IN_FOCUSED_WINDOW);
        jPanel1.getInputMap().put(KeyStroke.getKeyStroke("UP"), "up");
        jPanel1.getActionMap().put("up", new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                game.moveUp();
                if(game.isSolved()) jLabel1.setText("Solved");
                else jLabel1.setText("Not solved");
            }
        });
        jPanel1.getInputMap().put(KeyStroke.getKeyStroke("DOWN"), "down");
        jPanel1.getActionMap().put("down", new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                game.moveDown();
                if(game.isSolved()) jLabel1.setText("Solved");
                else jLabel1.setText("Not solved");
            }
        });
        jPanel1.getInputMap().put(KeyStroke.getKeyStroke("LEFT"), "left");
        jPanel1.getActionMap().put("left", new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                game.moveLeft();
                if(game.isSolved()) jLabel1.setText("Solved");
                else jLabel1.setText("Not solved");
            }
        });
        jPanel1.getInputMap().put(KeyStroke.getKeyStroke("RIGHT"), "right");
        jPanel1.getActionMap().put("right", new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                game.moveRight();
                if(game.isSolved()) jLabel1.setText("Solved");
                else jLabel1.setText("Not solved");
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        shuffleButton = new javax.swing.JButton();
        gridSize = new javax.swing.JComboBox<>();
        imageButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Game15");
        setMinimumSize(new java.awt.Dimension(360, 240));
        setPreferredSize(new java.awt.Dimension(480, 480));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        jLabel1.setText("Solved");
        jPanel1.add(jLabel1);

        shuffleButton.setText("Shuffle");
        shuffleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shuffleButtonActionPerformed(evt);
            }
        });
        jPanel1.add(shuffleButton);

        gridSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2x2", "3x3", "4x4", "5x5", "12x12", "3x5", "5x3" }));
        gridSize.setSelectedIndex(1);
        gridSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gridSizeActionPerformed(evt);
            }
        });
        jPanel1.add(gridSize);

        imageButton.setText("Choose image");
        imageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageButtonActionPerformed(evt);
            }
        });
        jPanel1.add(imageButton);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void shuffleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shuffleButtonActionPerformed
        game.shuffle();
        if(game.isSolved()) jLabel1.setText("Solved");
        else jLabel1.setText("Not solved");
        jPanel1.requestFocus();
    }//GEN-LAST:event_shuffleButtonActionPerformed

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        //jButton1.setLocation((int)(getContentPane().getWidth()/2-jButton1.getWidth()/2), getContentPane().getHeight()-jButton1.getHeight());
        //game.render();
    }//GEN-LAST:event_formComponentResized

    private void gridSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gridSizeActionPerformed
        try {
            String item = gridSize.getSelectedItem().toString();
            if(item == currSize) return;
            currSize = item;
            int rows = Integer.parseInt(item.substring(0, item.indexOf('x')));
            int columns = Integer.parseInt(item.substring(item.indexOf('x')+1));
            game.createGrid(rows, columns, imagePath);
            jPanel1.requestFocus();
            repaint();
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_gridSizeActionPerformed

    private void imageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageButtonActionPerformed
        j = new JFileChooser();
        j.setAcceptAllFileFilterUsed(false);
        j.setDialogTitle("Select an image file");
        FileNameExtensionFilter restrict = new FileNameExtensionFilter("Image files", "png", "jpg", "jpeg");
        j.addChoosableFileFilter(restrict);
        
        int r = j.showOpenDialog(game);
 
            // if the user selects a file
        if (r == JFileChooser.APPROVE_OPTION)

        {
            // set the label to the path of the selected file
            imagePath = j.getSelectedFile().getAbsolutePath();
            try {
                game.createGrid(game.rows, game.columns, imagePath);
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
            jPanel1.requestFocus();
            repaint();
        }
        
    }//GEN-LAST:event_imageButtonActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    Window game;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> gridSize;
    private javax.swing.JButton imageButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton shuffleButton;
    // End of variables declaration//GEN-END:variables
}
